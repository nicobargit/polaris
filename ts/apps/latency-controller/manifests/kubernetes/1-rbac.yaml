apiVersion: v1
kind: Namespace
metadata:
    name: polaris
---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: latency-controller
    namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    # ClusterRoles are not namespaced
    name: latency-controller
rules:
    # Allow reading all SLO mappings
    # - apiGroups:
    #   - slo.polaris-slo-cloud.github.io
    #   resources:
    #   - "*"
    #   verbs:
    #   - get
    #   - watch
    #   - list

    # Allow reading supported SLO mappings
    - apiGroups:
          - slo.polaris-slo-cloud.github.io
      resources:
          - latencyslomappings
      verbs:
          - get
          - watch
          - list
    - apiGroups:
          - slo.polaris-slo-cloud.github.io
      resources:
          - latencyslomappings/status
      verbs:
          - get

    # Allow writing all elasticity strategies
    - apiGroups:
          - elasticity.polaris-slo-cloud.github.io
      resources:
          - '*'
      verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
# Optionally, we could create a RoleBinding and to scope the permissions to a specific namespace
metadata:
    name: control-latency-slos
subjects:
    - kind: ServiceAccount
      name: latency-controller
      namespace: polaris
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: latency-controller
